/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Workflow, WorkflowInterface } from "../../contracts/Workflow";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_workflowName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_payee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_workflowAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_hookAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PaymentTriggered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "workflowAmount",
        type: "uint256",
      },
    ],
    name: "ReleaseFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizePayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProgress",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllSteps",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum Workflow.StepType",
            name: "stepType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string",
                name: "value",
                type: "string",
              },
            ],
            internalType: "struct Workflow.Metadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Workflow.Step[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHookAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPayee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProgressCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stepIndex",
        type: "uint256",
      },
    ],
    name: "getStep",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum Workflow.StepType",
            name: "stepType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string",
                name: "value",
                type: "string",
              },
            ],
            internalType: "struct Workflow.Metadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Workflow.Step",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStepsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdcAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWorkflowAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hookAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "progress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "steps",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum Workflow.StepType",
        name: "stepType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "string",
            name: "value",
            type: "string",
          },
        ],
        internalType: "struct Workflow.Metadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateProgress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "workflowAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "workflowName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516131743803806131748339818101604052810190610032919061072f565b336001600081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100ad5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a491906107e7565b60405180910390fd5b6100bc8161046060201b60201c565b5085600290816100cc9190610a19565b5084600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360068190555082600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360405180606001604052806040518060400160405280600481526020017f4a6f62310000000000000000000000000000000000000000000000000000000081525081526020016000600181111561023457610233610aeb565b5b8152602001604051806040016040528060405180602001604052806000815250815260200160405180602001604052806000815250815250815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000190816102ad9190610a19565b5060208201518160010160006101000a81548160ff021916908360018111156102d9576102d8610aeb565b5b021790555060408201518160020160008201518160000190816102fc9190610a19565b5060208201518160010190816103129190610a19565b5050505050600360405180606001604052806040518060400160405280600881526020017f5061796d656e7431000000000000000000000000000000000000000000000000815250815260200160018081111561037257610371610aeb565b5b8152602001604051806040016040528060405180602001604052806000815250815260200160405180602001604052806000815250815250815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000190816103eb9190610a19565b5060208201518160010160006101000a81548160ff0219169083600181111561041757610416610aeb565b5b0217905550604082015181600201600082015181600001908161043a9190610a19565b5060208201518160010190816104509190610a19565b5050505050505050505050610b1a565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61058d82610544565b810181811067ffffffffffffffff821117156105ac576105ab610555565b5b80604052505050565b60006105bf610526565b90506105cb8282610584565b919050565b600067ffffffffffffffff8211156105eb576105ea610555565b5b6105f482610544565b9050602081019050919050565b60005b8381101561061f578082015181840152602081019050610604565b60008484015250505050565b600061063e610639846105d0565b6105b5565b90508281526020810184848401111561065a5761065961053f565b5b610665848285610601565b509392505050565b600082601f8301126106825761068161053a565b5b815161069284826020860161062b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106c68261069b565b9050919050565b6106d6816106bb565b81146106e157600080fd5b50565b6000815190506106f3816106cd565b92915050565b6000819050919050565b61070c816106f9565b811461071757600080fd5b50565b60008151905061072981610703565b92915050565b60008060008060008060c0878903121561074c5761074b610530565b5b600087015167ffffffffffffffff81111561076a57610769610535565b5b61077689828a0161066d565b965050602061078789828a016106e4565b955050604061079889828a0161071a565b94505060606107a989828a016106e4565b93505060806107ba89828a016106e4565b92505060a06107cb89828a016106e4565b9150509295509295509295565b6107e1816106bb565b82525050565b60006020820190506107fc60008301846107d8565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061085457607f821691505b6020821081036108675761086661080d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108cf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610892565b6108d98683610892565b95508019841693508086168417925050509392505050565b6000819050919050565b600061091661091161090c846106f9565b6108f1565b6106f9565b9050919050565b6000819050919050565b610930836108fb565b61094461093c8261091d565b84845461089f565b825550505050565b600090565b61095961094c565b610964818484610927565b505050565b5b818110156109885761097d600082610951565b60018101905061096a565b5050565b601f8211156109cd5761099e8161086d565b6109a784610882565b810160208510156109b6578190505b6109ca6109c285610882565b830182610969565b50505b505050565b600082821c905092915050565b60006109f0600019846008026109d2565b1980831691505092915050565b6000610a0983836109df565b9150826002028217905092915050565b610a2282610802565b67ffffffffffffffff811115610a3b57610a3a610555565b5b610a45825461083c565b610a5082828561098c565b600060209050601f831160018114610a835760008415610a71578287015190505b610a7b85826109fd565b865550610ae3565b601f198416610a918661086d565b60005b82811015610ab957848901518255600182019150602085019450602081019050610a94565b86831015610ad65784890151610ad2601f8916826109df565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61264b80610b296000396000f3fe60806040526004361061019c5760003560e01c80638da5cb5b116100ec578063be9a71bd1161008a578063dc048cf211610064578063dc048cf214610557578063f0bc7eec14610580578063f2fde38b146105ab578063fa11f041146105d45761019c565b8063be9a71bd146104d6578063cd44673514610501578063dbe0b5b21461052c5761019c565b80639f29e0af116100c65780639f29e0af1461044d578063a2ff553914610478578063ae90b2131461048f578063b6b55f25146104ba5761019c565b80638da5cb5b146103cc5780639196e481146103f7578063920b994b146104225761019c565b8063715018a61161015957806377c267eb1161013357806377c267eb1461030e5780637874888a1461033957806384d64e7e14610376578063893d20e8146103a15761019c565b8063715018a6146102a15780637217e0b9146102b85780637389e955146102f75761019c565b806302d45457146101a157806332a3cf96146101cc5780635bf8633a146101f75780635f8f38ca14610222578063670389901461024d57806369826a9414610264575b600080fd5b3480156101ad57600080fd5b506101b66105ff565b6040516101c391906119e1565b60405180910390f35b3480156101d857600080fd5b506101e1610625565b6040516101ee91906119e1565b60405180910390f35b34801561020357600080fd5b5061020c61064b565b60405161021991906119e1565b60405180910390f35b34801561022e57600080fd5b50610237610671565b6040516102449190611a15565b60405180910390f35b34801561025957600080fd5b5061026261067e565b005b34801561027057600080fd5b5061028b60048036038101906102869190611a66565b6108ae565b6040516102989190611a15565b60405180910390f35b3480156102ad57600080fd5b506102b66108d2565b005b3480156102c457600080fd5b506102df60048036038101906102da9190611a66565b6108e6565b6040516102ee93929190611c28565b60405180910390f35b34801561030357600080fd5b5061030c610ae3565b005b34801561031a57600080fd5b50610323610bfa565b6040516103309190611a15565b60405180910390f35b34801561034557600080fd5b50610360600480360381019061035b9190611a66565b610c07565b60405161036d9190611d17565b60405180910390f35b34801561038257600080fd5b5061038b610e8f565b6040516103989190611d39565b60405180910390f35b3480156103ad57600080fd5b506103b6610f1d565b6040516103c391906119e1565b60405180910390f35b3480156103d857600080fd5b506103e1610f2c565b6040516103ee91906119e1565b60405180910390f35b34801561040357600080fd5b5061040c610f56565b6040516104199190611e74565b60405180910390f35b34801561042e57600080fd5b506104376111ba565b6040516104449190611a15565b60405180910390f35b34801561045957600080fd5b506104626111c0565b60405161046f9190611a15565b60405180910390f35b34801561048457600080fd5b5061048d6111ca565b005b34801561049b57600080fd5b506104a4611393565b6040516104b191906119e1565b60405180910390f35b6104d460048036038101906104cf9190611a66565b6113b9565b005b3480156104e257600080fd5b506104eb6114bd565b6040516104f891906119e1565b60405180910390f35b34801561050d57600080fd5b506105166114e7565b60405161052391906119e1565b60405180910390f35b34801561053857600080fd5b50610541611511565b60405161054e91906119e1565b60405180910390f35b34801561056357600080fd5b5061057e60048036038101906105799190611efb565b61153b565b005b34801561058c57600080fd5b506105956116a0565b6040516105a29190612019565b60405180910390f35b3480156105b757600080fd5b506105d260048036038101906105cd9190612067565b6116f8565b005b3480156105e057600080fd5b506105e961177e565b6040516105f691906119e1565b60405180910390f35b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600480549050905090565b6106866117a8565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d906120e0565b60405180910390fd5b6001600380549050610728919061212f565b6004805490501461076e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610765906121d5565b60405180910390fd5b6000620f424060065461078191906121f5565b9050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610802929190612237565b6020604051808303816000875af1158015610821573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108459190612298565b50600060068190555060044290806001815401808255809150506001900390600052602060002001600090919091909150557f783a5a571d66125524b5d411a796056871348215b08d70592a46d740a32b887660405160405180910390a1506108ac6117ee565b565b600481815481106108be57600080fd5b906000526020600020016000915090505481565b6108da6117f8565b6108e4600061187f565b565b600381815481106108f657600080fd5b9060005260206000209060040201600091509050806000018054610919906122f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610945906122f4565b80156109925780601f1061096757610100808354040283529160200191610992565b820191906000526020600020905b81548152906001019060200180831161097557829003601f168201915b5050505050908060010160009054906101000a900460ff1690806002016040518060400160405290816000820180546109ca906122f4565b80601f01602080910402602001604051908101604052809291908181526020018280546109f6906122f4565b8015610a435780601f10610a1857610100808354040283529160200191610a43565b820191906000526020600020905b815481529060010190602001808311610a2657829003601f168201915b50505050508152602001600182018054610a5c906122f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a88906122f4565b8015610ad55780601f10610aaa57610100808354040283529160200191610ad5565b820191906000526020600020905b815481529060010190602001808311610ab857829003601f168201915b505050505081525050905083565b610aeb6117a8565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7290612371565b60405180910390fd5b60038054905060048054905010610bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbe906123dd565b60405180910390fd5b6004429080600181540180825580915050600190039060005260206000200160009091909190915055610bf86117ee565b565b6000600380549050905090565b610c0f61194d565b6003805490508210610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d90612449565b60405180910390fd5b60038281548110610c6a57610c69612469565b5b9060005260206000209060040201604051806060016040529081600082018054610c93906122f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610cbf906122f4565b8015610d0c5780601f10610ce157610100808354040283529160200191610d0c565b820191906000526020600020905b815481529060010190602001808311610cef57829003601f168201915b505050505081526020016001820160009054906101000a900460ff166001811115610d3a57610d39611b23565b5b6001811115610d4c57610d4b611b23565b5b815260200160028201604051806040016040529081600082018054610d70906122f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9c906122f4565b8015610de95780601f10610dbe57610100808354040283529160200191610de9565b820191906000526020600020905b815481529060010190602001808311610dcc57829003601f168201915b50505050508152602001600182018054610e02906122f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2e906122f4565b8015610e7b5780601f10610e5057610100808354040283529160200191610e7b565b820191906000526020600020905b815481529060010190602001808311610e5e57829003601f168201915b505050505081525050815250509050919050565b60028054610e9c906122f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec8906122f4565b8015610f155780601f10610eea57610100808354040283529160200191610f15565b820191906000526020600020905b815481529060010190602001808311610ef857829003601f168201915b505050505081565b6000610f27610f2c565b905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156111b15783829060005260206000209060040201604051806060016040529081600082018054610fad906122f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd9906122f4565b80156110265780601f10610ffb57610100808354040283529160200191611026565b820191906000526020600020905b81548152906001019060200180831161100957829003601f168201915b505050505081526020016001820160009054906101000a900460ff16600181111561105457611053611b23565b5b600181111561106657611065611b23565b5b81526020016002820160405180604001604052908160008201805461108a906122f4565b80601f01602080910402602001604051908101604052809291908181526020018280546110b6906122f4565b80156111035780601f106110d857610100808354040283529160200191611103565b820191906000526020600020905b8154815290600101906020018083116110e657829003601f168201915b5050505050815260200160018201805461111c906122f4565b80601f0160208091040260200160405190810160405280929190818152602001828054611148906122f4565b80156111955780601f1061116a57610100808354040283529160200191611195565b820191906000526020600020905b81548152906001019060200180831161117857829003601f168201915b5050505050815250508152505081526020019060010190610f7a565b50505050905090565b60065481565b6000600654905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461125a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611251906124e4565b60405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166006546040518363ffffffff1660e01b81526004016112db929190612237565b6020604051808303816000875af11580156112fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131e9190612298565b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f68f6240bdac70a448185c2855675ad0bcab19c53f4a3c42f11f359ccb9c2acd66006546040516113899190611a15565b60405180910390a2565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6113c16117a8565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161142093929190612504565b6020604051808303816000875af115801561143f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114639190612298565b503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c826040516114aa9190611a15565b60405180910390a26114ba6117ee565b50565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6115436117f8565b600654831115611588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157f90612587565b60405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6115ce610f2c565b856040518363ffffffff1660e01b81526004016115ec929190612237565b6020604051808303816000875af115801561160b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162f9190612298565b508260066000828254611642919061212f565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fb80d46a1fcb96f3896e038df66c1242504a8e49effecd0bf2473574707ca0121848484604051611693939291906125e3565b60405180910390a2505050565b606060048054806020026020016040519081016040528092919081815260200182805480156116ee57602002820191906000526020600020905b8154815260200190600101908083116116da575b5050505050905090565b6117006117f8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117725760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161176991906119e1565b60405180910390fd5b61177b8161187f565b50565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002600054036117e4576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b611800611945565b73ffffffffffffffffffffffffffffffffffffffff1661181e610f2c565b73ffffffffffffffffffffffffffffffffffffffff161461187d57611841611945565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161187491906119e1565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060600160405280606081526020016000600181111561197357611972611b23565b5b8152602001611980611986565b81525090565b604051806040016040528060608152602001606081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119cb826119a0565b9050919050565b6119db816119c0565b82525050565b60006020820190506119f660008301846119d2565b92915050565b6000819050919050565b611a0f816119fc565b82525050565b6000602082019050611a2a6000830184611a06565b92915050565b600080fd5b600080fd5b611a43816119fc565b8114611a4e57600080fd5b50565b600081359050611a6081611a3a565b92915050565b600060208284031215611a7c57611a7b611a30565b5b6000611a8a84828501611a51565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611acd578082015181840152602081019050611ab2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611af582611a93565b611aff8185611a9e565b9350611b0f818560208601611aaf565b611b1881611ad9565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611b6357611b62611b23565b5b50565b6000819050611b7482611b52565b919050565b6000611b8482611b66565b9050919050565b611b9481611b79565b82525050565b600082825260208201905092915050565b6000611bb682611a93565b611bc08185611b9a565b9350611bd0818560208601611aaf565b611bd981611ad9565b840191505092915050565b60006040830160008301518482036000860152611c018282611bab565b91505060208301518482036020860152611c1b8282611bab565b9150508091505092915050565b60006060820190508181036000830152611c428186611aea565b9050611c516020830185611b8b565b8181036040830152611c638184611be4565b9050949350505050565b611c7681611b79565b82525050565b60006040830160008301518482036000860152611c998282611bab565b91505060208301518482036020860152611cb38282611bab565b9150508091505092915050565b60006060830160008301518482036000860152611cdd8282611bab565b9150506020830151611cf26020860182611c6d565b5060408301518482036040860152611d0a8282611c7c565b9150508091505092915050565b60006020820190508181036000830152611d318184611cc0565b905092915050565b60006020820190508181036000830152611d538184611aea565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006060830160008301518482036000860152611da48282611bab565b9150506020830151611db96020860182611c6d565b5060408301518482036040860152611dd18282611c7c565b9150508091505092915050565b6000611dea8383611d87565b905092915050565b6000602082019050919050565b6000611e0a82611d5b565b611e148185611d66565b935083602082028501611e2685611d77565b8060005b85811015611e625784840389528151611e438582611dde565b9450611e4e83611df2565b925060208a01995050600181019050611e2a565b50829750879550505050505092915050565b60006020820190508181036000830152611e8e8184611dff565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611ebb57611eba611e96565b5b8235905067ffffffffffffffff811115611ed857611ed7611e9b565b5b602083019150836001820283011115611ef457611ef3611ea0565b5b9250929050565b600080600060408486031215611f1457611f13611a30565b5b6000611f2286828701611a51565b935050602084013567ffffffffffffffff811115611f4357611f42611a35565b5b611f4f86828701611ea5565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611f90816119fc565b82525050565b6000611fa28383611f87565b60208301905092915050565b6000602082019050919050565b6000611fc682611f5b565b611fd08185611f66565b9350611fdb83611f77565b8060005b8381101561200c578151611ff38882611f96565b9750611ffe83611fae565b925050600181019050611fdf565b5085935050505092915050565b600060208201905081810360008301526120338184611fbb565b905092915050565b612044816119c0565b811461204f57600080fd5b50565b6000813590506120618161203b565b92915050565b60006020828403121561207d5761207c611a30565b5b600061208b84828501612052565b91505092915050565b7f4f6e6c7920686f6f6b2063616e2066696e616c697a65207061796d656e740000600082015250565b60006120ca601e83611a9e565b91506120d582612094565b602082019050919050565b600060208201905081810360008301526120f9816120bd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061213a826119fc565b9150612145836119fc565b925082820390508181111561215d5761215c612100565b5b92915050565b7f5061796d656e74206d757374206265206c617374207374657020696e2070726f60008201527f6772657373000000000000000000000000000000000000000000000000000000602082015250565b60006121bf602583611a9e565b91506121ca82612163565b604082019050919050565b600060208201905081810360008301526121ee816121b2565b9050919050565b6000612200826119fc565b915061220b836119fc565b9250828202612219816119fc565b915082820484148315176122305761222f612100565b5b5092915050565b600060408201905061224c60008301856119d2565b6122596020830184611a06565b9392505050565b60008115159050919050565b61227581612260565b811461228057600080fd5b50565b6000815190506122928161226c565b92915050565b6000602082840312156122ae576122ad611a30565b5b60006122bc84828501612283565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061230c57607f821691505b60208210810361231f5761231e6122c5565b5b50919050565b7f4f6e6c7920686f6f6b2063616e207570646174652070726f6772657373000000600082015250565b600061235b601d83611a9e565b915061236682612325565b602082019050919050565b6000602082019050818103600083015261238a8161234e565b9050919050565b7f50726f677265737320696e646578206f7574206f6620626f756e647300000000600082015250565b60006123c7601c83611a9e565b91506123d282612391565b602082019050919050565b600060208201905081810360008301526123f6816123ba565b9050919050565b7f5374657020696e646578206f7574206f6620626f756e64730000000000000000600082015250565b6000612433601883611a9e565b915061243e826123fd565b602082019050919050565b6000602082019050818103600083015261246281612426565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f6e6c7920686f6f6b2063616e2072656c656173652066756e64000000000000600082015250565b60006124ce601a83611a9e565b91506124d982612498565b602082019050919050565b600060208201905081810360008301526124fd816124c1565b9050919050565b600060608201905061251960008301866119d2565b61252660208301856119d2565b6125336040830184611a06565b949350505050565b7f576f726b666c6f7720616d6f756e74206e6f742073756666696369656e740000600082015250565b6000612571601e83611a9e565b915061257c8261253b565b602082019050919050565b600060208201905081810360008301526125a081612564565b9050919050565b82818337600083830152505050565b60006125c28385611a9e565b93506125cf8385846125a7565b6125d883611ad9565b840190509392505050565b60006040820190506125f86000830186611a06565b818103602083015261260b8184866125b6565b905094935050505056fea2646970667358221220687dc39ff521d9f25fe83ef61fc774ace1fac24aaaedfde5b7f6dc19baa8c55b64736f6c634300081b0033";

type WorkflowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorkflowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Workflow__factory extends ContractFactory {
  constructor(...args: WorkflowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _workflowName: string,
    _payee: AddressLike,
    _workflowAmount: BigNumberish,
    _usdcAddress: AddressLike,
    _nftAddress: AddressLike,
    _hookAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _workflowName,
      _payee,
      _workflowAmount,
      _usdcAddress,
      _nftAddress,
      _hookAddress,
      overrides || {}
    );
  }
  override deploy(
    _workflowName: string,
    _payee: AddressLike,
    _workflowAmount: BigNumberish,
    _usdcAddress: AddressLike,
    _nftAddress: AddressLike,
    _hookAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _workflowName,
      _payee,
      _workflowAmount,
      _usdcAddress,
      _nftAddress,
      _hookAddress,
      overrides || {}
    ) as Promise<
      Workflow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Workflow__factory {
    return super.connect(runner) as Workflow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorkflowInterface {
    return new Interface(_abi) as WorkflowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Workflow {
    return new Contract(address, _abi, runner) as unknown as Workflow;
  }
}
