/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Workflow, WorkflowInterface } from "../../contracts/Workflow";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_workflowName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_payee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_workflowAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_hookAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PaymentTriggered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "workflowAmount",
        type: "uint256",
      },
    ],
    name: "ReleaseFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizePayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProgress",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllSteps",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum Workflow.StepType",
            name: "stepType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string",
                name: "value",
                type: "string",
              },
            ],
            internalType: "struct Workflow.Metadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Workflow.Step[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHookAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPayee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProgressCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stepIndex",
        type: "uint256",
      },
    ],
    name: "getStep",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum Workflow.StepType",
            name: "stepType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string",
                name: "value",
                type: "string",
              },
            ],
            internalType: "struct Workflow.Metadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Workflow.Step",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStepsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdcAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWorkflowAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hookAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "progress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "steps",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum Workflow.StepType",
        name: "stepType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "string",
            name: "value",
            type: "string",
          },
        ],
        internalType: "struct Workflow.Metadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateProgress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "workflowAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "workflowName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051612e80380380612e808339818101604052810190610032919061072f565b336001600081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100ad5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a491906107e7565b60405180910390fd5b6100bc8161046060201b60201c565b5085600290816100cc9190610a19565b5084600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360068190555082600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360405180606001604052806040518060400160405280600481526020017f4a6f62310000000000000000000000000000000000000000000000000000000081525081526020016000600181111561023457610233610aeb565b5b8152602001604051806040016040528060405180602001604052806000815250815260200160405180602001604052806000815250815250815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000190816102ad9190610a19565b5060208201518160010160006101000a81548160ff021916908360018111156102d9576102d8610aeb565b5b021790555060408201518160020160008201518160000190816102fc9190610a19565b5060208201518160010190816103129190610a19565b5050505050600360405180606001604052806040518060400160405280600881526020017f5061796d656e7431000000000000000000000000000000000000000000000000815250815260200160018081111561037257610371610aeb565b5b8152602001604051806040016040528060405180602001604052806000815250815260200160405180602001604052806000815250815250815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000190816103eb9190610a19565b5060208201518160010160006101000a81548160ff0219169083600181111561041757610416610aeb565b5b0217905550604082015181600201600082015181600001908161043a9190610a19565b5060208201518160010190816104509190610a19565b5050505050505050505050610b1a565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61058d82610544565b810181811067ffffffffffffffff821117156105ac576105ab610555565b5b80604052505050565b60006105bf610526565b90506105cb8282610584565b919050565b600067ffffffffffffffff8211156105eb576105ea610555565b5b6105f482610544565b9050602081019050919050565b60005b8381101561061f578082015181840152602081019050610604565b60008484015250505050565b600061063e610639846105d0565b6105b5565b90508281526020810184848401111561065a5761065961053f565b5b610665848285610601565b509392505050565b600082601f8301126106825761068161053a565b5b815161069284826020860161062b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106c68261069b565b9050919050565b6106d6816106bb565b81146106e157600080fd5b50565b6000815190506106f3816106cd565b92915050565b6000819050919050565b61070c816106f9565b811461071757600080fd5b50565b60008151905061072981610703565b92915050565b60008060008060008060c0878903121561074c5761074b610530565b5b600087015167ffffffffffffffff81111561076a57610769610535565b5b61077689828a0161066d565b965050602061078789828a016106e4565b955050604061079889828a0161071a565b94505060606107a989828a016106e4565b93505060806107ba89828a016106e4565b92505060a06107cb89828a016106e4565b9150509295509295509295565b6107e1816106bb565b82525050565b60006020820190506107fc60008301846107d8565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061085457607f821691505b6020821081036108675761086661080d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108cf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610892565b6108d98683610892565b95508019841693508086168417925050509392505050565b6000819050919050565b600061091661091161090c846106f9565b6108f1565b6106f9565b9050919050565b6000819050919050565b610930836108fb565b61094461093c8261091d565b84845461089f565b825550505050565b600090565b61095961094c565b610964818484610927565b505050565b5b818110156109885761097d600082610951565b60018101905061096a565b5050565b601f8211156109cd5761099e8161086d565b6109a784610882565b810160208510156109b6578190505b6109ca6109c285610882565b830182610969565b50505b505050565b600082821c905092915050565b60006109f0600019846008026109d2565b1980831691505092915050565b6000610a0983836109df565b9150826002028217905092915050565b610a2282610802565b67ffffffffffffffff811115610a3b57610a3a610555565b5b610a45825461083c565b610a5082828561098c565b600060209050601f831160018114610a835760008415610a71578287015190505b610a7b85826109fd565b865550610ae3565b601f198416610a918661086d565b60005b82811015610ab957848901518255600182019150602085019450602081019050610a94565b86831015610ad65784890151610ad2601f8916826109df565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61235780610b296000396000f3fe60806040526004361061019c5760003560e01c80638da5cb5b116100ec578063be9a71bd1161008a578063dc048cf211610064578063dc048cf214610557578063f0bc7eec14610580578063f2fde38b146105ab578063fa11f041146105d45761019c565b8063be9a71bd146104d6578063cd44673514610501578063dbe0b5b21461052c5761019c565b80639f29e0af116100c65780639f29e0af1461044d578063a2ff553914610478578063ae90b2131461048f578063b6b55f25146104ba5761019c565b80638da5cb5b146103cc5780639196e481146103f7578063920b994b146104225761019c565b8063715018a61161015957806377c267eb1161013357806377c267eb1461030e5780637874888a1461033957806384d64e7e14610376578063893d20e8146103a15761019c565b8063715018a6146102a15780637217e0b9146102b85780637389e955146102f75761019c565b806302d45457146101a157806332a3cf96146101cc5780635bf8633a146101f75780635f8f38ca14610222578063670389901461024d57806369826a9414610264575b600080fd5b3480156101ad57600080fd5b506101b66105ff565b6040516101c39190611831565b60405180910390f35b3480156101d857600080fd5b506101e1610625565b6040516101ee9190611831565b60405180910390f35b34801561020357600080fd5b5061020c61064b565b6040516102199190611831565b60405180910390f35b34801561022e57600080fd5b50610237610671565b6040516102449190611865565b60405180910390f35b34801561025957600080fd5b5061026261067e565b005b34801561027057600080fd5b5061028b600480360381019061028691906118b6565b61081e565b6040516102989190611865565b60405180910390f35b3480156102ad57600080fd5b506102b6610842565b005b3480156102c457600080fd5b506102df60048036038101906102da91906118b6565b610856565b6040516102ee93929190611a78565b60405180910390f35b34801561030357600080fd5b5061030c610a53565b005b34801561031a57600080fd5b50610323610ada565b6040516103309190611865565b60405180910390f35b34801561034557600080fd5b50610360600480360381019061035b91906118b6565b610ae7565b60405161036d9190611b67565b60405180910390f35b34801561038257600080fd5b5061038b610d6f565b6040516103989190611b89565b60405180910390f35b3480156103ad57600080fd5b506103b6610dfd565b6040516103c39190611831565b60405180910390f35b3480156103d857600080fd5b506103e1610e0c565b6040516103ee9190611831565b60405180910390f35b34801561040357600080fd5b5061040c610e36565b6040516104199190611cc4565b60405180910390f35b34801561042e57600080fd5b5061043761109a565b6040516104449190611865565b60405180910390f35b34801561045957600080fd5b506104626110a0565b60405161046f9190611865565b60405180910390f35b34801561048457600080fd5b5061048d6110aa565b005b34801561049b57600080fd5b506104a46111e3565b6040516104b19190611831565b60405180910390f35b6104d460048036038101906104cf91906118b6565b611209565b005b3480156104e257600080fd5b506104eb61130d565b6040516104f89190611831565b60405180910390f35b34801561050d57600080fd5b50610516611337565b6040516105239190611831565b60405180910390f35b34801561053857600080fd5b50610541611361565b60405161054e9190611831565b60405180910390f35b34801561056357600080fd5b5061057e60048036038101906105799190611d4b565b61138b565b005b34801561058c57600080fd5b506105956114f0565b6040516105a29190611e69565b60405180910390f35b3480156105b757600080fd5b506105d260048036038101906105cd9190611eb7565b611548565b005b3480156105e057600080fd5b506105e96115ce565b6040516105f69190611831565b60405180910390f35b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600480549050905090565b6106866115f8565b60016003805490506106989190611f13565b600480549050146106de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d590611fb9565b60405180910390fd5b6000620f42406006546106f19190611fd9565b9050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161077292919061201b565b6020604051808303816000875af1158015610791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b5919061207c565b50600060068190555060044290806001815401808255809150506001900390600052602060002001600090919091909150557f783a5a571d66125524b5d411a796056871348215b08d70592a46d740a32b887660405160405180910390a15061081c61163e565b565b6004818154811061082e57600080fd5b906000526020600020016000915090505481565b61084a611648565b61085460006116cf565b565b6003818154811061086657600080fd5b9060005260206000209060040201600091509050806000018054610889906120d8565b80601f01602080910402602001604051908101604052809291908181526020018280546108b5906120d8565b80156109025780601f106108d757610100808354040283529160200191610902565b820191906000526020600020905b8154815290600101906020018083116108e557829003601f168201915b5050505050908060010160009054906101000a900460ff16908060020160405180604001604052908160008201805461093a906120d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610966906120d8565b80156109b35780601f10610988576101008083540402835291602001916109b3565b820191906000526020600020905b81548152906001019060200180831161099657829003601f168201915b505050505081526020016001820180546109cc906120d8565b80601f01602080910402602001604051908101604052809291908181526020018280546109f8906120d8565b8015610a455780601f10610a1a57610100808354040283529160200191610a45565b820191906000526020600020905b815481529060010190602001808311610a2857829003601f168201915b505050505081525050905083565b610a5b6115f8565b60038054905060048054905010610aa7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9e90612155565b60405180910390fd5b6004429080600181540180825580915050600190039060005260206000200160009091909190915055610ad861163e565b565b6000600380549050905090565b610aef61179d565b6003805490508210610b36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2d906121c1565b60405180910390fd5b60038281548110610b4a57610b496121e1565b5b9060005260206000209060040201604051806060016040529081600082018054610b73906120d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9f906120d8565b8015610bec5780601f10610bc157610100808354040283529160200191610bec565b820191906000526020600020905b815481529060010190602001808311610bcf57829003601f168201915b505050505081526020016001820160009054906101000a900460ff166001811115610c1a57610c19611973565b5b6001811115610c2c57610c2b611973565b5b815260200160028201604051806040016040529081600082018054610c50906120d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7c906120d8565b8015610cc95780601f10610c9e57610100808354040283529160200191610cc9565b820191906000526020600020905b815481529060010190602001808311610cac57829003601f168201915b50505050508152602001600182018054610ce2906120d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0e906120d8565b8015610d5b5780601f10610d3057610100808354040283529160200191610d5b565b820191906000526020600020905b815481529060010190602001808311610d3e57829003601f168201915b505050505081525050815250509050919050565b60028054610d7c906120d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610da8906120d8565b8015610df55780601f10610dca57610100808354040283529160200191610df5565b820191906000526020600020905b815481529060010190602001808311610dd857829003601f168201915b505050505081565b6000610e07610e0c565b905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156110915783829060005260206000209060040201604051806060016040529081600082018054610e8d906120d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb9906120d8565b8015610f065780601f10610edb57610100808354040283529160200191610f06565b820191906000526020600020905b815481529060010190602001808311610ee957829003601f168201915b505050505081526020016001820160009054906101000a900460ff166001811115610f3457610f33611973565b5b6001811115610f4657610f45611973565b5b815260200160028201604051806040016040529081600082018054610f6a906120d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610f96906120d8565b8015610fe35780601f10610fb857610100808354040283529160200191610fe3565b820191906000526020600020905b815481529060010190602001808311610fc657829003601f168201915b50505050508152602001600182018054610ffc906120d8565b80601f0160208091040260200160405190810160405280929190818152602001828054611028906120d8565b80156110755780601f1061104a57610100808354040283529160200191611075565b820191906000526020600020905b81548152906001019060200180831161105857829003601f168201915b5050505050815250508152505081526020019060010190610e5a565b50505050905090565b60065481565b6000600654905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166006546040518363ffffffff1660e01b815260040161112b92919061201b565b6020604051808303816000875af115801561114a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116e919061207c565b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f68f6240bdac70a448185c2855675ad0bcab19c53f4a3c42f11f359ccb9c2acd66006546040516111d99190611865565b60405180910390a2565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6112116115f8565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161127093929190612210565b6020604051808303816000875af115801561128f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b3919061207c565b503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c826040516112fa9190611865565b60405180910390a261130a61163e565b50565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611393611648565b6006548311156113d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113cf90612293565b60405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61141e610e0c565b856040518363ffffffff1660e01b815260040161143c92919061201b565b6020604051808303816000875af115801561145b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147f919061207c565b5082600660008282546114929190611f13565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fb80d46a1fcb96f3896e038df66c1242504a8e49effecd0bf2473574707ca01218484846040516114e3939291906122ef565b60405180910390a2505050565b6060600480548060200260200160405190810160405280929190818152602001828054801561153e57602002820191906000526020600020905b81548152602001906001019080831161152a575b5050505050905090565b611550611648565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115c25760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016115b99190611831565b60405180910390fd5b6115cb816116cf565b50565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260005403611634576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b611650611795565b73ffffffffffffffffffffffffffffffffffffffff1661166e610e0c565b73ffffffffffffffffffffffffffffffffffffffff16146116cd57611691611795565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116c49190611831565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806060016040528060608152602001600060018111156117c3576117c2611973565b5b81526020016117d06117d6565b81525090565b604051806040016040528060608152602001606081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061181b826117f0565b9050919050565b61182b81611810565b82525050565b60006020820190506118466000830184611822565b92915050565b6000819050919050565b61185f8161184c565b82525050565b600060208201905061187a6000830184611856565b92915050565b600080fd5b600080fd5b6118938161184c565b811461189e57600080fd5b50565b6000813590506118b08161188a565b92915050565b6000602082840312156118cc576118cb611880565b5b60006118da848285016118a1565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561191d578082015181840152602081019050611902565b60008484015250505050565b6000601f19601f8301169050919050565b6000611945826118e3565b61194f81856118ee565b935061195f8185602086016118ff565b61196881611929565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106119b3576119b2611973565b5b50565b60008190506119c4826119a2565b919050565b60006119d4826119b6565b9050919050565b6119e4816119c9565b82525050565b600082825260208201905092915050565b6000611a06826118e3565b611a1081856119ea565b9350611a208185602086016118ff565b611a2981611929565b840191505092915050565b60006040830160008301518482036000860152611a5182826119fb565b91505060208301518482036020860152611a6b82826119fb565b9150508091505092915050565b60006060820190508181036000830152611a92818661193a565b9050611aa160208301856119db565b8181036040830152611ab38184611a34565b9050949350505050565b611ac6816119c9565b82525050565b60006040830160008301518482036000860152611ae982826119fb565b91505060208301518482036020860152611b0382826119fb565b9150508091505092915050565b60006060830160008301518482036000860152611b2d82826119fb565b9150506020830151611b426020860182611abd565b5060408301518482036040860152611b5a8282611acc565b9150508091505092915050565b60006020820190508181036000830152611b818184611b10565b905092915050565b60006020820190508181036000830152611ba3818461193a565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006060830160008301518482036000860152611bf482826119fb565b9150506020830151611c096020860182611abd565b5060408301518482036040860152611c218282611acc565b9150508091505092915050565b6000611c3a8383611bd7565b905092915050565b6000602082019050919050565b6000611c5a82611bab565b611c648185611bb6565b935083602082028501611c7685611bc7565b8060005b85811015611cb25784840389528151611c938582611c2e565b9450611c9e83611c42565b925060208a01995050600181019050611c7a565b50829750879550505050505092915050565b60006020820190508181036000830152611cde8184611c4f565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611d0b57611d0a611ce6565b5b8235905067ffffffffffffffff811115611d2857611d27611ceb565b5b602083019150836001820283011115611d4457611d43611cf0565b5b9250929050565b600080600060408486031215611d6457611d63611880565b5b6000611d72868287016118a1565b935050602084013567ffffffffffffffff811115611d9357611d92611885565b5b611d9f86828701611cf5565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611de08161184c565b82525050565b6000611df28383611dd7565b60208301905092915050565b6000602082019050919050565b6000611e1682611dab565b611e208185611db6565b9350611e2b83611dc7565b8060005b83811015611e5c578151611e438882611de6565b9750611e4e83611dfe565b925050600181019050611e2f565b5085935050505092915050565b60006020820190508181036000830152611e838184611e0b565b905092915050565b611e9481611810565b8114611e9f57600080fd5b50565b600081359050611eb181611e8b565b92915050565b600060208284031215611ecd57611ecc611880565b5b6000611edb84828501611ea2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f1e8261184c565b9150611f298361184c565b9250828203905081811115611f4157611f40611ee4565b5b92915050565b7f5061796d656e74206d757374206265206c617374207374657020696e2070726f60008201527f6772657373000000000000000000000000000000000000000000000000000000602082015250565b6000611fa36025836118ee565b9150611fae82611f47565b604082019050919050565b60006020820190508181036000830152611fd281611f96565b9050919050565b6000611fe48261184c565b9150611fef8361184c565b9250828202611ffd8161184c565b9150828204841483151761201457612013611ee4565b5b5092915050565b60006040820190506120306000830185611822565b61203d6020830184611856565b9392505050565b60008115159050919050565b61205981612044565b811461206457600080fd5b50565b60008151905061207681612050565b92915050565b60006020828403121561209257612091611880565b5b60006120a084828501612067565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806120f057607f821691505b602082108103612103576121026120a9565b5b50919050565b7f50726f677265737320696e646578206f7574206f6620626f756e647300000000600082015250565b600061213f601c836118ee565b915061214a82612109565b602082019050919050565b6000602082019050818103600083015261216e81612132565b9050919050565b7f5374657020696e646578206f7574206f6620626f756e64730000000000000000600082015250565b60006121ab6018836118ee565b91506121b682612175565b602082019050919050565b600060208201905081810360008301526121da8161219e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006060820190506122256000830186611822565b6122326020830185611822565b61223f6040830184611856565b949350505050565b7f576f726b666c6f7720616d6f756e74206e6f742073756666696369656e740000600082015250565b600061227d601e836118ee565b915061228882612247565b602082019050919050565b600060208201905081810360008301526122ac81612270565b9050919050565b82818337600083830152505050565b60006122ce83856118ee565b93506122db8385846122b3565b6122e483611929565b840190509392505050565b60006040820190506123046000830186611856565b81810360208301526123178184866122c2565b905094935050505056fea2646970667358221220c437ac0bbc41eae72f2dc7dc10ecfb3f48191efd98e14c7e05ca9a772295308464736f6c634300081b0033";

type WorkflowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorkflowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Workflow__factory extends ContractFactory {
  constructor(...args: WorkflowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _workflowName: string,
    _payee: AddressLike,
    _workflowAmount: BigNumberish,
    _usdcAddress: AddressLike,
    _nftAddress: AddressLike,
    _hookAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _workflowName,
      _payee,
      _workflowAmount,
      _usdcAddress,
      _nftAddress,
      _hookAddress,
      overrides || {}
    );
  }
  override deploy(
    _workflowName: string,
    _payee: AddressLike,
    _workflowAmount: BigNumberish,
    _usdcAddress: AddressLike,
    _nftAddress: AddressLike,
    _hookAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _workflowName,
      _payee,
      _workflowAmount,
      _usdcAddress,
      _nftAddress,
      _hookAddress,
      overrides || {}
    ) as Promise<
      Workflow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Workflow__factory {
    return super.connect(runner) as Workflow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorkflowInterface {
    return new Interface(_abi) as WorkflowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Workflow {
    return new Contract(address, _abi, runner) as unknown as Workflow;
  }
}
